---
- name: TEST
  connection: local
#  gather_facts: true
  gather_facts: false
  hosts: all
  serial: 0
  vars:
    LOCATION: "TST6B"
    STACK: "EXN"
    PNET:
      - name: "PROTECTED_NET_{{ LOCATION }}_{{ STACK }}"
        prefix: "192.168.88.0/24"
        inet: 4
      - name: "PROTECTED_NET_{{ LOCATION }}_{{ STACK }}"
        prefix: "192.168.89.0/24"
        inet: 4
      - name: "PROTECTED_NET_{{ LOCATION }}_{{ STACK }}"
        prefix: "2606:ae00:e200:103::/64"
        inet: 6
    PROTECTED_NET:
      - name: "PROTECTED_NET_{{ LOCATION }}_{{ STACK }}"
        prefix: "192.168.88.0/24"
        inet: 4
      - name: "PROTECTED_NET_{{ LOCATION }}_{{ STACK }}"
        prefix: "192.168.89.0/24"
        inet: 4
      - name: "PROTECTED_NET_{{ LOCATION }}_{{ STACK }}"
        prefix: "2606:ae00:e200:103::/64"
        inet: 6
    SPACE_API_LOGIN_AUTH_USER: "{{username}}"
    SPACE_API_LOGIN_AUTH_PASS: "@!T3stME!"

  tasks:
    - name: JUNOSSPACELOGIN
      uri:
        url: "https://{{ SPACE_HOST }}:{{ SPACE_API_PORT }}/api/space/user-management/login"
        method: POST
        force_basic_auth: yes
        status_code: 200
        follow_redirects: all
        user: "{{ SPACE_API_LOGIN_AUTH_USER }}"
        password: "{{ SPACE_API_LOGIN_AUTH_PASS }}"
        return_content: yes
        validate_certs: no
        headers:
          Accept: application/vnd.net.juniper.space.user-management.user-ref+json;version=1
      register: OUTPUTLOGIN
    - name: DEBUGOUTPUTLOGINJSON
      debug:
        var: OUTPUTLOGIN.json
  #      verbosity: 1
    - name: DEBUGOUTPUTLOGIN
      debug:
        msg: "{{ OUTPUTLOGIN }}"
    - name: DEBUGOUTPUTLOGIN
      copy:
        content: "{{ OUTPUTLOGIN }}"
        dest: "{{ DEBUG_DIR }}deb.03_01-junos_space_login_{{ CONFIG_TYPE }}.{{ inventory_hostname }}"
    - name: DEBUGOUTPUTLOGINCOOKIE
      copy:
        content: "{{ OUTPUTLOGIN.set_cookie }}"
        dest: "{{ OUTPUT_DIR }}output.03_01-junos_space_login_set_cookie_{{ CONFIG_TYPE}}.{{ inventory_hostname }}"
    - name: SETFACTOUTPUTLOGINCOOKIE
      set_fact:
        LOGIN_COOKIE: "{{ OUTPUTLOGIN.set_cookie }}"
    - name: DEBUGSETFACTOUTPUTLOGINCOOKIE
      debug:
        var: LOGIN_COOKIE

    - name: DMGETDEVICES
      uri:
        url: "https://{{ SPACE_HOST }}:{{ SPACE_API_PORT }}/api/juniper/sd/device-management/devices?filter=(name%20eq%20'{{ inventory_hostname }}')"
        method: GET
        validate_certs: no
        headers:
          Accept: application/vnd.juniper.sd.device-management.devices+json;version=2;q=0.02
          Cookie: "{{ LOGIN_COOKIE }}"
      register: DMDEVICEID
    - name: DEBUGDMDEVICEIDJSON
      debug:
        var: DMDEVICEID.json
  #      verbosity: 1
    - name: DEBUGDMDEVICEID
      debug:
        msg: "{{ DMDEVICEID }}"
    - name: COPYDEBUGDMDEVICEID
      copy:
        content: "{{ DMDEVICEID }}"
        dest: "{{ DEBUG_DIR }}deb.03_02-junos_space_get_devices_{{ CONFIG_TYPE }}.{{ inventory_hostname }}"
    - name: SETFACTDMDEVICEID
      set_fact:
        CONTEXT_DEVICE_ID: "{{ DMDEVICEID.json.devices.device[0].id }}"
    - name: DEBUGSETFACTDMDEVICEID
      debug:
        msg: "{{ CONTEXT_DEVICE_ID }}"
    - name: COPYDEBUGSETFACTDMDEVICEID
      copy:
        content: "{{ CONTEXT_DEVICE_ID }}"
        dest: "{{ OUTPUT_DIR }}output.03_02-junos_space_get_devices_{{ CONFIG_TYPE}}.{{ inventory_hostname }}"
#    when:
#    ignore_errors: yes